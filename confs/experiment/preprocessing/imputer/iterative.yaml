method: iterative
# Name of the method.

# missing_values:
# The placeholder for the missing values. All occurrences of missing_values will be imputed.
# For pandas’ dataframes with nullable integer dtypes with missing values, missing_values
# should be set to np.nan, since pd.NA will be converted to np.nan.


sample_posterior: False
# Whether to sample from the (Gaussian) predictive posterior of the fitted estimator for each
# imputation. Estimator must support return_std in its predict method if set to True. Set to True
# if using IterativeImputer for multiple imputations.
# Default = False.

max_iter: 10
# Maximum number of imputation rounds to perform before returning the imputations computed during
# the final round. A round is a single imputation of each feature with missing values. The stopping
# criterion is met once max(abs(X_t - X_{t-1}))/max(abs(X[known_vals])) < tol, where X_t is X at
# iteration t. Note that early stopping is only applied if sample_posterior=False.
# Default = 10.

tol: 1e-3
# Tolerance of the stopping condition.
# Default = 1e-3.

n_nearest_features:
# Number of other features to use to estimate the missing values of each feature column.
# Nearness between features is measured using the absolute correlation coefficient between
# each feature pair (after initial imputation). To ensure coverage of features throughout the
# imputation process, the neighbor features are not necessarily nearest, but are drawn with
# probability proportional to correlation for each imputed target feature. Can provide significant
# speed-up when the number of features is huge. If None, all features will be used.
# Default = None.

initial_strategy: mean
# Which strategy to use to initialize the missing values. Same as the strategy parameter in SimpleImputer.
# Default = 'mean'. Options are 'mean', 'median', 'most_frequent', 'constant'.

imputation_order: ascending
# The order in which the features will be imputed. Possible values:
# - 'ascending': From features with fewest missing values to most.
# - 'descending': From features with most missing values to fewest.
# - 'roman': Left to right.
# - 'arabic': Right to left.
# - 'random': A random order for each round.
# Default = 'ascending'.

skip_complete: False
# If True then features with missing values during transform which did not have any missing
# values during fit will be imputed with the initial imputation method only. Set to True if
# you have many features with no missing values at both fit and transform time to save compute.
# Default = False.

# min_value: -np.inf
# Minimum possible imputed value. Broadcast to shape (n_features,) if scalar. If array-like,
# expects shape (n_features,), one min value for each feature.
# Default = -np.inf.

# max_value: np.inf
# Maximum possible imputed value. Broadcast to shape (n_features,) if scalar. If array-like,
# expects shape (n_features,), one max value for each feature.
# Default = np.inf.

verbose: ${verbose}
# Verbosity flag, controls the debug messages that are issued as functions are evaluated.
# The higher, the more verbose.
# Options are 0, 1, or 2.

random_state: ${seed}
# The seed of the pseudo random number generator to use. Randomizes selection of estimator features if n_nearest_features is not None, the imputation_order if random, and the sampling from posterior if sample_posterior=True. Use an integer for determinism. See the Glossary.
# Default = None.

add_indicator: False
# If True, a MissingIndicator transform will stack onto output of the imputer’s transform.
# This allows a predictive estimator to account for missingness despite imputation. If a
# feature has no missing values at fit/train time, the feature won’t appear on the missing
# indicator even if there are missing values at transform/test time.
# Default = False.

# keep_empty_features: False
# If True, features that consist exclusively of missing values when fit is called are returned in
# results when transform is called. The imputed value is always 0 except when
# initial_strategy="constant" in which case fill_value will be used instead.
# default = False.

concat_mask: False
# A boolean value to indicate whether to concatenate the mask to the data or not.
# Default = False.